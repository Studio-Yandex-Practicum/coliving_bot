# Generated by Django 5.0.4 on 2024-04-22 04:53

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("profiles", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="ProfileLike",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.SmallIntegerField(
                        choices=[
                            (0, "Is Pending"),
                            (1, "Is Match"),
                            (-1, "Is Rejected"),
                        ],
                        default=0,
                        verbose_name="Статус запроса",
                    ),
                ),
                (
                    "match_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Дата ответа"
                    ),
                ),
                (
                    "created_date",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата запроса"
                    ),
                ),
                (
                    "receiver",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="received_likes",
                        to="profiles.profile",
                        verbose_name="Получатель",
                    ),
                ),
                (
                    "sender",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sent_likes",
                        to="profiles.profile",
                        verbose_name="Отправитель",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserReport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.TextField(verbose_name="Текст")),
                (
                    "category",
                    models.TextField(
                        choices=[
                            ("Категория 1", "Категория 1"),
                            ("Категория 2", "Категория 2"),
                            ("Категория 3", "Категория 3"),
                            ("Другое", "Другое"),
                        ],
                        verbose_name="Категория",
                    ),
                ),
                (
                    "status",
                    models.TextField(
                        choices=[
                            ("Получено", "Получено"),
                            ("Просмотрено", "Просмотрено"),
                            ("Решено", "Решено"),
                            ("Отклонено", "Отклонено"),
                        ],
                        default="Получено",
                        verbose_name="Статус",
                    ),
                ),
                (
                    "created_date",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "reported_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="complaints_against",
                        to="profiles.userfromtelegram",
                        verbose_name="Обвиняемый",
                    ),
                ),
                (
                    "reporter",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="filed_reports",
                        to="profiles.userfromtelegram",
                        verbose_name="Подавший жалобу",
                    ),
                ),
            ],
            options={
                "verbose_name": "Жалоба",
                "verbose_name_plural": "Жалобы",
                "ordering": ("-created_date",),
            },
        ),
        migrations.CreateModel(
            name="ColivingLike",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.SmallIntegerField(
                        choices=[
                            (0, "Is Pending"),
                            (1, "Is Match"),
                            (-1, "Is Rejected"),
                        ],
                        default=0,
                        verbose_name="Статус запроса",
                    ),
                ),
                (
                    "match_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Дата ответа"
                    ),
                ),
                (
                    "created_date",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата запроса"
                    ),
                ),
                (
                    "coliving",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="likes",
                        to="profiles.coliving",
                        verbose_name="Комната Coliving",
                    ),
                ),
                (
                    "sender",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="liked_colivings",
                        to="profiles.profile",
                        verbose_name="Отправитель",
                    ),
                ),
            ],
            options={
                "unique_together": {("sender", "coliving")},
            },
        ),
        migrations.AddConstraint(
            model_name="profilelike",
            constraint=models.CheckConstraint(
                check=models.Q(("sender", models.F("receiver")), _negated=True),
                name="different_sender_receiver",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="profilelike",
            unique_together={("sender", "receiver")},
        ),
        migrations.AddConstraint(
            model_name="userreport",
            constraint=models.UniqueConstraint(
                fields=("reporter", "reported_user"), name="Uniq report"
            ),
        ),
    ]
