# Generated by Django 5.0 on 2023-12-16 07:34

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("profiles", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="MatchRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.SmallIntegerField(
                        choices=[
                            (0, "Is Pending"),
                            (1, "Is Match"),
                            (-1, "Is Rejected"),
                        ],
                        default=0,
                        verbose_name="Статус запроса",
                    ),
                ),
                (
                    "created_date",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата запроса"
                    ),
                ),
                (
                    "match_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Дата ответа"
                    ),
                ),
                (
                    "receiver",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="match_requests",
                        to="profiles.userfromtelegram",
                        verbose_name="Получатель",
                    ),
                ),
                (
                    "sender",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="likes",
                        to="profiles.userfromtelegram",
                        verbose_name="Отправитель",
                    ),
                ),
            ],
            options={
                "verbose_name": "Связь",
                "verbose_name_plural": "Связи",
                "ordering": ("sender", "receiver", "-created_date"),
            },
        ),
        migrations.AddConstraint(
            model_name="matchrequest",
            constraint=models.CheckConstraint(
                check=models.Q(("sender", models.F("receiver")), _negated=True),
                name="Cant match to myself",
            ),
        ),
        migrations.AddConstraint(
            model_name="matchrequest",
            constraint=models.UniqueConstraint(
                fields=("sender", "receiver"), name="Uniq match request"
            ),
        ),
    ]
