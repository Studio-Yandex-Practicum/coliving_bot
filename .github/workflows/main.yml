name: Main workflow

on: push

jobs:

  common_steps:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up Python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      - name: Install project
        run: poetry install --no-interaction

  code_style:
    steps:
      - name: Run code_style checking if pull_request
        if: github.event_name == 'pull_request'
        run: |
          poetry run flake8 --exclude=.venv/ .
          poetry run isort --check-only --skip-gitignore --diff .

  tests:
    steps:
      - name: Start testing
        run: |
          source .venv/bin/activate
          echo "Current environment: $VIRTUAL_ENV"
          cd src/backend
          python manage.py test
