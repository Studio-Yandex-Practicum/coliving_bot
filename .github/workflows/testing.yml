name: Check code style and run tests

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  common_steps:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Install project
        run: poetry install --no-interaction

      - name: Run code_style checking
        run: |
          poetry run flake8 --exclude=.venv/ .
          poetry run isort --check-only --skip-gitignore --diff .

      - name: Check out black formating
        uses: psf/black@stable
        with:
          options: "--check --verbose"
          src: "./src"

      - name: Start testing
        run: |
          source .venv/bin/activate
          echo "Current environment: $VIRTUAL_ENV"
          cd src/backend
          python manage.py test
